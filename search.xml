<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>传参方式</title>
      <link href="/2021/12/03/@RequestParam%20%E5%92%8C%20@PathVariable%20/"/>
      <url>/2021/12/03/@RequestParam%20%E5%92%8C%20@PathVariable%20/</url>
      
        <content type="html"><![CDATA[<h1 id="RequestParam-和-PathVariable区别"><a href="#RequestParam-和-PathVariable区别" class="headerlink" title="@RequestParam 和 @PathVariable区别"></a>@RequestParam 和 @PathVariable区别</h1><p><strong>@RequestParam 和 @PathVariable注解是用于从request中接收请求的，两个都可以接收参数，关键点不同的是@RequestParam是request里面拿取值，而 @PathVariable是从一个URI模板里面来填充</strong></p><p><strong>@RequestParam</strong></p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">// http://localhost:8080/delete?id=5</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/delete"</span><span class="token punctuation">,</span>method <span class="token operator">=</span> <span class="token punctuation">{</span>RequestMethod<span class="token punctuation">.</span>GET<span class="token punctuation">,</span>RequestMethod<span class="token punctuation">.</span>POST<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">public</span> Boolean <span class="token function">DeleteStuinfo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> <span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">{</span>     <span class="token keyword">return</span> stuinfoService<span class="token punctuation">.</span><span class="token function">deleteStuinfo</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><strong>@PathVariable</strong></p><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">// http://localhost:8080/delete/4</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/delete/{id}"</span><span class="token punctuation">,</span>method <span class="token operator">=</span> <span class="token punctuation">{</span>RequestMethod<span class="token punctuation">.</span>GET<span class="token punctuation">,</span>RequestMethod<span class="token punctuation">.</span>POST<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token keyword">public</span> Boolean <span class="token function">DeleteStuinfo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> <span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> stuinfoService<span class="token punctuation">.</span><span class="token function">deleteStuinfo</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> spring注解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL笔记</title>
      <link href="/2021/12/01/MySQL%E7%AC%94%E8%AE%B0/"/>
      <url>/2021/12/01/MySQL%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL笔记"><a href="#MySQL笔记" class="headerlink" title="MySQL笔记"></a>MySQL笔记</h1><h2 id="DQL语言"><a href="#DQL语言" class="headerlink" title="DQL语言"></a>DQL语言</h2><p>数据查询语言</p><h3 id="1-基础查询"><a href="#1-基础查询" class="headerlink" title="1.基础查询"></a>1.基础查询</h3><p><strong>语法: select  查询列表  from  表名;</strong></p><p>类似于: System. out.println(打印东西) ;<br>特点:<br>1、查询列表可以是:表中的字段、常量值、表达式、函数<br>2、查询的结果是一个虚拟的表格</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">use</span> myemployees<span class="token punctuation">;</span></code></pre><p>1.查询表中的单个字段</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> last_name <span class="token keyword">from</span> employees<span class="token punctuation">;</span></code></pre><p>2.查询表中的多个字段</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> last_name<span class="token punctuation">,</span>email <span class="token keyword">from</span> employees<span class="token punctuation">;</span></code></pre><p>3.查询表中所有字段</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 方式一</span><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> employees<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 方式二</span><span class="token keyword">SELECT</span>    employee_id<span class="token punctuation">,</span>    first_name<span class="token punctuation">,</span>    last_name<span class="token punctuation">,</span>    email<span class="token punctuation">,</span>    phone_number<span class="token punctuation">,</span>    job_id<span class="token punctuation">,</span>    salary<span class="token punctuation">,</span>    commission_pct<span class="token punctuation">,</span>    manager_id<span class="token punctuation">,</span>    department_id<span class="token punctuation">,</span>    hiredate<span class="token keyword">FROM</span>    employees<span class="token punctuation">;</span></code></pre><p>4.查询常量值</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token number">100</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token string">'join'</span><span class="token punctuation">;</span></code></pre><p>5.查询表达式</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token number">100</span><span class="token operator">%</span><span class="token number">98</span><span class="token punctuation">;</span></code></pre><p>6.查询函数</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> VERSION<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>7.起别名</p><p>①便于理解<br>②如果要查询的字段有重名的情况，使用别名可以区分开来</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 方式一：使用as</span><span class="token keyword">select</span> <span class="token number">100</span><span class="token operator">*</span><span class="token number">2</span> <span class="token keyword">as</span> 结果<span class="token punctuation">;</span><span class="token keyword">select</span> last_name <span class="token keyword">as</span> 姓<span class="token punctuation">,</span>first_name <span class="token keyword">as</span> 名 <span class="token keyword">from</span> employees<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 方式二：使用空格</span><span class="token keyword">select</span> last_name 姓<span class="token punctuation">,</span>first_name 名 <span class="token keyword">from</span> employees<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 案例:查询salary, 显示结果为out put</span><span class="token keyword">select</span> salary <span class="token keyword">as</span> <span class="token string">"out put"</span> <span class="token keyword">from</span> employees</code></pre><p>8.去重</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 案例:查询员工表中涉及到的所有的部门编号</span><span class="token keyword">select</span>  <span class="token keyword">DISTINCT</span> department_id <span class="token keyword">from</span> employees<span class="token punctuation">;</span></code></pre><p>9.+号的作用</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">/*java中的+号:①运算符，两个操作数都为数值型②连接符，只要有一个操作数为字符串mysq1中的+号:仅仅只有一个功能:运算符select 100+90;两个操作数都为数值型，则做加法运算select '123'+90;其中一方为字符型，试图将字符型数值转换成数值型，如果转换成功，则继续做加法运算，如果转换失败，则将字符型数值转换成0。select null+10; 只要其中一方为nul1，则结果肯定为null*/</span><span class="token comment" spellcheck="true">-- 案例:查询员工名和姓连接成一个字段，并显示为姓名.</span><span class="token comment" spellcheck="true">-- 函数 ：CONCAT() :连接字符</span><span class="token keyword">SELECT</span> CONCAT<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 结果<span class="token punctuation">;</span><span class="token keyword">select</span> CONCAT<span class="token punctuation">(</span>last_name<span class="token punctuation">,</span>first_name<span class="token punctuation">)</span> <span class="token keyword">as</span> 姓名 <span class="token keyword">from</span> employees<span class="token punctuation">;</span><span class="token comment" spellcheck="true">-- 案例:显示出表employees的全部列，各个列之间用逗号连接，列头显示成ouT_ PUT</span><span class="token comment" spellcheck="true">-- 函数 IFNULL（a,b)，判断a是否是null，是则为b。</span><span class="token keyword">select</span> IFNULL<span class="token punctuation">(</span>commission_pct<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 奖金率<span class="token punctuation">,</span>commission_pct <span class="token keyword">from</span> employees<span class="token punctuation">;</span></code></pre><h3 id="2-条件查询"><a href="#2-条件查询" class="headerlink" title="2.条件查询"></a>2.条件查询</h3><p><strong>语法: select 查询列表 from 表名 where 筛选条件;</strong></p><p>分类：<br>一、按条件表达式筛选<br>            条件运算符:&gt; &lt; = != &lt;&gt; &gt;= &lt;=</p><p>二、按逻辑表达式筛选<br>        逻辑运算符: &amp;&amp; || ！and or not </p><p>三、模糊查询<br>        like<br>        between and<br>        in<br>        is nu11</p><p>一、按条件表达式师选</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#案例1:查询工资>12000的员工信息</span><span class="token keyword">select</span> <span class="token operator">*</span><span class="token keyword">from</span> employees <span class="token keyword">where</span> salary<span class="token operator">></span><span class="token number">12000</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例2:查询部门编号不等于90号的员工名和部门编号</span><span class="token keyword">select</span> last_name<span class="token punctuation">,</span>department_id <span class="token keyword">from</span> employees <span class="token keyword">where</span> department_id<span class="token operator">&lt;></span><span class="token number">90</span><span class="token punctuation">;</span></code></pre><p>二、按逻辑表达式筛选</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#案例1:查询工资z在10000到20000之间的员工名、工资以及奖金</span><span class="token keyword">select</span> last_name<span class="token punctuation">,</span>salary<span class="token punctuation">,</span> commission_pct <span class="token keyword">from</span> employees <span class="token keyword">where</span> salary<span class="token operator">>=</span><span class="token number">10000</span> <span class="token operator">and</span> salary<span class="token operator">&lt;=</span><span class="token number">20000</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例2:查询部门编号不是在90到110之间，或者工资高于15000的员工信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> employees <span class="token keyword">where</span>  department_id<span class="token operator">&lt;</span><span class="token number">90</span> <span class="token operator">or</span> department_id<span class="token operator">></span><span class="token number">110</span> <span class="token operator">or</span> salary<span class="token operator">></span><span class="token number">15000</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例3:选择工资不在8000到17000的员工的姓名和工资</span><span class="token keyword">select</span> last_name<span class="token punctuation">,</span>salary <span class="token keyword">from</span> employees <span class="token keyword">where</span> salary <span class="token operator">not</span> <span class="token operator">between</span> <span class="token number">8000</span> <span class="token operator">and</span> <span class="token number">17000</span><span class="token punctuation">;</span></code></pre><p>三、模糊查询<br>1.like<br>特点:<br>        ①一般和通配符搭配使用<br>            通配符:<br>                % 任意多个字符,包含0个字符<br>                _ 任意单个字符</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#案例1:查询员工名中包含字符a的员工信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> employees <span class="token keyword">where</span> last_name <span class="token operator">like</span> <span class="token string">'%a%'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例2:查询员工名中第三个字符为n，第五个字符为l的员工名和工资</span><span class="token keyword">select</span> last_name<span class="token punctuation">,</span>salary  <span class="token keyword">from</span> employees <span class="token keyword">where</span> last_name <span class="token operator">like</span> <span class="token string">'__n_l%'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例3:查询员工名中第二个字符为_的员工名    ESCAPE转义字符</span><span class="token keyword">select</span> last_name <span class="token keyword">from</span> employees <span class="token keyword">where</span> last_name <span class="token operator">like</span> <span class="token string">'_\_%'</span> <span class="token punctuation">;</span><span class="token keyword">select</span> last_name <span class="token keyword">from</span> employees <span class="token keyword">where</span> last_name <span class="token operator">like</span> <span class="token string">'_a_%'</span> <span class="token keyword">ESCAPE</span> <span class="token string">'a'</span><span class="token punctuation">;</span></code></pre><p>2.between and</p><p>①使用between and可以提高语句的简洁度<br>②包含临界值<br>③两个临界值不要调换顺序</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#案例1:查询员工编号在100到120之间的员工信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> employees <span class="token keyword">where</span> employee_id <span class="token operator">between</span> <span class="token number">100</span> <span class="token operator">and</span> <span class="token number">120</span><span class="token punctuation">;</span></code></pre><p>3.in</p><p>含义:判断某字段的值是否属于in列表中的某一项<br>特点:<br>        ①使用in提高语句简洁度<br>        ②in列表的值类型必须一致或兼容</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#案例:查询员工的工种编号是IT_PROG、 AD_VP、AD_PRES中的一个员工名和工种编号.</span><span class="token keyword">select</span> last_name<span class="token punctuation">,</span>job_id <span class="token keyword">from</span> employees <span class="token keyword">where</span> job_id <span class="token operator">in</span><span class="token punctuation">(</span><span class="token string">'IT_PROG'</span><span class="token punctuation">,</span><span class="token string">'AD_VP'</span><span class="token punctuation">,</span><span class="token string">'AD_PRES'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>4、is null | is not null</p><p>①=或&lt;&gt;不能用于判断null值<br>②is null或is not null可以判断null值</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#案例1:查询没有奖金的员工名和奖金率</span><span class="token keyword">select</span> last_name<span class="token punctuation">,</span>commission_pct <span class="token keyword">from</span> employees <span class="token keyword">where</span> commission_pct <span class="token operator">is</span> <span class="token boolean">null</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例2:查询有奖金的员工名和奖金率</span><span class="token keyword">select</span> last_name<span class="token punctuation">,</span>commission_pct <span class="token keyword">from</span> employees <span class="token keyword">where</span> commission_pct <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">;</span></code></pre><h3 id="3-排序查询"><a href="#3-排序查询" class="headerlink" title="3.排序查询"></a>3.排序查询</h3><p><strong>语法:  select  查询列表  from   表  [where   筛选条件]   order  by   排序列表   asc|desc ;</strong></p><p>特点:<br>        1、asc代表的是升序，desc代表的是降序，如果不写，默认是升序<br>        2、order by子句中可以支持单个字段、多个字段、表达式、函数、别名<br>        3、order by子句一般是放在查询语句的最后面，limit子句除外</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#案例1:查询员工信息，要求工资从高到低排序</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> employees <span class="token keyword">order</span> <span class="token keyword">by</span> salary <span class="token keyword">desc</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例2:查询部门编号>=90的员工信息，按入职时间的先后进行排序[ 添加筛选条件]</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> employees <span class="token keyword">where</span> department_id<span class="token operator">>=</span><span class="token number">90</span> <span class="token keyword">order</span> <span class="token keyword">by</span> hiredate <span class="token keyword">asc</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例3:按年薪的高低显示员工的信息和年薪[按表达式排序]</span><span class="token keyword">select</span> <span class="token operator">*</span><span class="token punctuation">,</span>salary<span class="token operator">*</span><span class="token number">12</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span>IFNULL<span class="token punctuation">(</span>commission_pct<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 年薪 <span class="token keyword">from</span> employees <span class="token keyword">order</span> <span class="token keyword">by</span> salary<span class="token operator">*</span><span class="token number">12</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span>IFNULL<span class="token punctuation">(</span>commission_pct<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">desc</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例4:按年薪的高低显示员工的信息和年薪[按别名排序]</span><span class="token keyword">select</span> <span class="token operator">*</span><span class="token punctuation">,</span>salary<span class="token operator">*</span><span class="token number">12</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span>IFNULL<span class="token punctuation">(</span>commission_pct<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 年薪 <span class="token keyword">from</span> employees <span class="token keyword">order</span> <span class="token keyword">by</span> 年薪 <span class="token keyword">desc</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例5:按姓名的长度显示员工的姓名和工资[ 按函数排序]</span><span class="token keyword">select</span> LENGTH<span class="token punctuation">(</span>last_name<span class="token punctuation">)</span><span class="token punctuation">,</span>last_name<span class="token punctuation">,</span>salary <span class="token keyword">from</span> employees <span class="token keyword">order</span> <span class="token keyword">by</span> LENGTH<span class="token punctuation">(</span>last_name<span class="token punctuation">)</span> <span class="token keyword">desc</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例6:查询员工信息，要求先按工资排序，再按员工编号排序[按多个字段排序]</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> employees <span class="token keyword">order</span> <span class="token keyword">by</span> salary <span class="token keyword">desc</span><span class="token punctuation">,</span>employee_id <span class="token keyword">asc</span><span class="token punctuation">;</span></code></pre><h3 id="4-常见函数"><a href="#4-常见函数" class="headerlink" title="4.常见函数"></a>4.常见函数</h3><p>概念:类似于java的方法，将一-组逻辑语句封装在方法体中，对外暴露方法名<br>    好处: 1、隐藏了实现细节 2、 提高代码的重用性<br>    调用: select  函数名(实参列表)  [from表] ;<br>    特点:<br>        ①叫什么(函数名)<br>        ②干什么( 函数功能)<br>    分类:<br>        1、单行函数<br>        如concat、 length、 ifnull等<br>        2、分组函数<br>        功能:做统计使用，又称为统计函数、聚合函数、组函数</p><h4 id="4-1单行函数"><a href="#4-1单行函数" class="headerlink" title="4.1单行函数"></a>4.1单行函数</h4><h5 id="一-字符函数"><a href="#一-字符函数" class="headerlink" title="一.字符函数"></a>一.字符函数</h5><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#1. length获取参数值的字节个数</span><span class="token keyword">select</span> LENGTH<span class="token punctuation">(</span><span class="token string">'jion'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#4</span><span class="token keyword">select</span> LENGTH<span class="token punctuation">(</span><span class="token string">'张三丰hahaha'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#15</span><span class="token comment" spellcheck="true">#2.concat拼接字符串</span><span class="token keyword">select</span> CONCAT<span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 输出<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#abc</span><span class="token comment" spellcheck="true">#3.upper、lower 转换大小写</span><span class="token keyword">select</span> UPPER<span class="token punctuation">(</span><span class="token string">'abc'</span><span class="token punctuation">)</span> 输出<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#ABC</span><span class="token keyword">select</span> LOWER<span class="token punctuation">(</span><span class="token string">'ABC'</span><span class="token punctuation">)</span> 输出<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#abc</span><span class="token comment" spellcheck="true">#示例:将姓变大写，名变小写，然后拼接</span><span class="token keyword">select</span> CONCAT<span class="token punctuation">(</span>UPPER<span class="token punctuation">(</span>first_name<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'_'</span><span class="token punctuation">,</span>LOWER<span class="token punctuation">(</span>last_name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> 姓名 <span class="token keyword">from</span> employees<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#4.substr、substring 截取字符 注意:索引从1开始 </span><span class="token comment" spellcheck="true">#截取从指定索引处后面所有手符</span><span class="token keyword">select</span> SUBSTR<span class="token punctuation">(</span><span class="token string">'李莫愁爱上了陆展元'</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span> out_put<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#陆展元</span><span class="token comment" spellcheck="true">#截取从指定索引处指定字符长度的字符</span><span class="token keyword">select</span> SUBSTR<span class="token punctuation">(</span><span class="token string">'李莫愁爱上了陆展元'</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span> out_put<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#李莫愁</span><span class="token comment" spellcheck="true">#案例:姓名中首字符大写，其他字符小写然后用_拼接，显示出来</span><span class="token keyword">select</span> CONCAT<span class="token punctuation">(</span>UPPER<span class="token punctuation">(</span>SUBSTR<span class="token punctuation">(</span>last_name<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'_'</span><span class="token punctuation">,</span>LOWER<span class="token punctuation">(</span>SUBSTR<span class="token punctuation">(</span>last_name<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 姓名<span class="token keyword">from</span> employees<span class="token comment" spellcheck="true">#5.instr 返回子串第一次出现的索引，如果找不到返回0</span><span class="token keyword">select</span> INSTR<span class="token punctuation">(</span><span class="token string">'杨不悔爱上了殷六侠'</span><span class="token punctuation">,</span> <span class="token string">'殷六侠'</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> out_put<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#7</span><span class="token comment" spellcheck="true">#6.trim</span><span class="token comment" spellcheck="true">#7.1pad用指定的字符实现左填充指定长度</span><span class="token keyword">select</span> LPAD<span class="token punctuation">(</span><span class="token string">'殷素素'</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">'*'</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> out_put <span class="token punctuation">;</span><span class="token comment" spellcheck="true">#*******殷素素</span><span class="token comment" spellcheck="true">#8.rpad用指定的字符实现右填充指定长度</span><span class="token keyword">select</span> RPAD<span class="token punctuation">(</span><span class="token string">'殷素素'</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">'ab'</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> out_put<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#殷素素abab</span><span class="token comment" spellcheck="true">#9.replace替换</span><span class="token keyword">select</span> REPLACE<span class="token punctuation">(</span><span class="token string">'张无忌爱上了周芷若'</span><span class="token punctuation">,</span> <span class="token string">'周芷若'</span><span class="token punctuation">,</span> <span class="token string">'赵敏'</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> out_put<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#张无忌爱上了赵敏</span></code></pre><h5 id="二-数学函数"><a href="#二-数学函数" class="headerlink" title="二.数学函数"></a>二.数学函数</h5><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#1.round四舍五入 先四舍五入在看符号</span><span class="token keyword">select</span> <span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token number">1.55</span><span class="token punctuation">)</span> <span class="token punctuation">;</span><span class="token comment" spellcheck="true">#2</span><span class="token keyword">select</span> <span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token number">1.50</span><span class="token punctuation">)</span> <span class="token punctuation">;</span><span class="token comment" spellcheck="true">#2</span><span class="token keyword">select</span> <span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token number">1.45</span><span class="token punctuation">)</span> <span class="token punctuation">;</span><span class="token comment" spellcheck="true">#1</span><span class="token keyword">select</span> <span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.55</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#-2</span><span class="token keyword">select</span> <span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.50</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#-2</span><span class="token keyword">select</span> <span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.45</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#-1</span><span class="token keyword">select</span> <span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token number">1.567</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#1.56</span><span class="token comment" spellcheck="true">#2.ceil向上取整,返回>=该参数的最小整数</span><span class="token keyword">select</span> CEIL<span class="token punctuation">(</span><span class="token number">1.55</span><span class="token punctuation">)</span> <span class="token punctuation">;</span><span class="token comment" spellcheck="true">#2</span><span class="token keyword">select</span> CEIL<span class="token punctuation">(</span><span class="token number">1.50</span><span class="token punctuation">)</span> <span class="token punctuation">;</span><span class="token comment" spellcheck="true">#2</span><span class="token keyword">select</span> CEIL<span class="token punctuation">(</span><span class="token number">1.45</span><span class="token punctuation">)</span> <span class="token punctuation">;</span><span class="token comment" spellcheck="true">#2</span><span class="token keyword">select</span> CEIL<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.55</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#-1</span><span class="token keyword">select</span> CEIL<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.50</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#-1</span><span class="token keyword">select</span> CEIL<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.45</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#-1</span><span class="token comment" spellcheck="true">#3.floor向下取整，返回&lt;=该参数的最大整数</span><span class="token keyword">select</span> FLOOR<span class="token punctuation">(</span><span class="token number">1.55</span><span class="token punctuation">)</span> <span class="token punctuation">;</span><span class="token comment" spellcheck="true">#1</span><span class="token keyword">select</span> FLOOR<span class="token punctuation">(</span><span class="token number">1.50</span><span class="token punctuation">)</span> <span class="token punctuation">;</span><span class="token comment" spellcheck="true">#1</span><span class="token keyword">select</span> FLOOR<span class="token punctuation">(</span><span class="token number">1.45</span><span class="token punctuation">)</span> <span class="token punctuation">;</span><span class="token comment" spellcheck="true">#1</span><span class="token keyword">select</span> FLOOR<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.55</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#-2</span><span class="token keyword">select</span> FLOOR<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.50</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#-2</span><span class="token keyword">select</span> FLOOR<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.45</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#-2</span><span class="token comment" spellcheck="true">#4.truncate截断</span><span class="token keyword">select</span> <span class="token keyword">TRUNCATE</span><span class="token punctuation">(</span><span class="token number">1.69</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#1.6</span><span class="token keyword">select</span> <span class="token keyword">TRUNCATE</span><span class="token punctuation">(</span><span class="token number">1.698</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">#1.69</span><span class="token comment" spellcheck="true">#5.mod取余</span><span class="token comment" spellcheck="true">#mod(a,b) : a-a/b*b</span><span class="token comment" spellcheck="true">#mod (-10,-3) :-10- (-10)/ (-3)* (-3) =-1</span><span class="token keyword">SELECT</span> MOD <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#1</span><span class="token keyword">SELECT</span> <span class="token number">10</span><span class="token operator">%</span><span class="token number">3</span><span class="token punctuation">;</span></code></pre><h5 id="三-日期函数"><a href="#三-日期函数" class="headerlink" title="三.日期函数"></a>三.日期函数</h5><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#now返回当前系统日期+时间.</span><span class="token keyword">SELECT</span> <span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span><span class="token comment" spellcheck="true">#curdate返回当前系统日期，不包含时间</span><span class="token keyword">SELECT</span> CURDATE<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#curtime返回当前时间，不包含日期</span><span class="token keyword">SELECT</span> CURTIME<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#可以获取指定的部分，年、月、日、小时、分钟、秒</span><span class="token keyword">SELECT</span> YEAR <span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 年<span class="token punctuation">;</span><span class="token keyword">SELECT</span> YEAR<span class="token punctuation">(</span><span class="token string">'1998-1-1'</span><span class="token punctuation">)</span> 年<span class="token punctuation">;</span><span class="token keyword">SELECT</span> YEAR <span class="token punctuation">(</span>hiredate<span class="token punctuation">)</span> 年 <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> MONTH <span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>月<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#</span><span class="token keyword">SELECT</span> MONTHNAME<span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>月<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#英文表示</span><span class="token comment" spellcheck="true">#str_ to_ date将字符通过指定的格式转换成日期</span><span class="token keyword">SELECT</span> STR_TO_DATE <span class="token punctuation">(</span> <span class="token string">'1998-3 2'</span><span class="token punctuation">,</span><span class="token string">'%Y-%c %d'</span> <span class="token punctuation">)</span> <span class="token keyword">AS</span> out_put<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#查询入职日期为1992-4-3的员工信息</span><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> hiredate <span class="token operator">=</span> <span class="token string">'1992-4-3'</span> <span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token operator">*</span><span class="token punctuation">,</span>STR_TO_DATE<span class="token punctuation">(</span><span class="token string">'4-3 1992'</span><span class="token punctuation">,</span> <span class="token string">'%c-%d %Y'</span><span class="token punctuation">)</span> 入职日期 <span class="token keyword">FROM</span> employees <span class="token keyword">WHERE</span> hiredate <span class="token operator">=</span> STR_TO_DATE<span class="token punctuation">(</span><span class="token string">'4-3 1992'</span><span class="token punctuation">,</span> <span class="token string">'%c-%d %Y'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">#date_format将日期转换成字符</span><span class="token keyword">SELECT</span> DATE_FORMAT <span class="token punctuation">(</span><span class="token function">NOW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'%y年%m月%d日'</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> out_put<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#查询有奖金的员工名和入职日期(xx月/xx日xx年)</span><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span> DATE_FORMAT <span class="token punctuation">(</span>hiredate<span class="token punctuation">,</span> <span class="token string">'%m月/%d日/%y年'</span><span class="token punctuation">)</span>入职日期<span class="token keyword">FROM</span> employees<span class="token keyword">WHERE</span> commission_pct <span class="token operator">IS</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span></code></pre><h5 id="四-其他函数"><a href="#四-其他函数" class="headerlink" title="四.其他函数"></a>四.其他函数</h5><pre class=" language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> VERSION<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span><span class="token comment" spellcheck="true">#查看版本号</span><span class="token keyword">SELECT</span> <span class="token keyword">DATABASE</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span><span class="token comment" spellcheck="true">#查看当前数据库</span><span class="token keyword">SELECT</span> <span class="token keyword">USER</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span><span class="token comment" spellcheck="true">#查看当前用户</span>passvord<span class="token punctuation">(</span>字符<span class="token punctuation">)</span>:返回该字符的密码形式md5 <span class="token punctuation">(</span>字符<span class="token punctuation">)</span> :返回该字符的md5加密形式</code></pre><h5 id="五-流程函数"><a href="#五-流程函数" class="headerlink" title="五.流程函数"></a>五.流程函数</h5><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#1.if函数: if else 的效果</span><span class="token keyword">SELECT</span> <span class="token keyword">IF</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">'大'</span><span class="token punctuation">,</span> <span class="token string">'小'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> last_name<span class="token punctuation">,</span>commission_pct<span class="token punctuation">,</span> <span class="token keyword">IF</span><span class="token punctuation">(</span>commission_pct <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token string">'没奖金，呵呵'</span><span class="token punctuation">,</span> <span class="token string">'有奖金，嘻嘻'</span><span class="token punctuation">)</span> 备注 <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span></code></pre><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#2.case函数的使用-一: switch case的效果</span><span class="token comment" spellcheck="true">/*case 要判断的字段或表达式when常量1 then要显示的值1或语句1;when常量2 then要显示的值2或语句2;else 要显示的值n或语句n;end*/</span><span class="token comment" spellcheck="true">/*案例: 查询员工的工资，要求部门号=30，显示的工资为1.1倍部门号=40，显示的工资为1.2倍部门号=50，显示的工资为1.3倍其他部门，显示的工资为原工资*/</span><span class="token keyword">select</span> department_id<span class="token punctuation">,</span>salary 原始工资<span class="token punctuation">,</span><span class="token keyword">CASE</span> department_id<span class="token keyword">WHEN</span> <span class="token number">30</span> <span class="token keyword">then</span> salary<span class="token operator">*</span><span class="token number">1.1</span><span class="token keyword">WHEN</span> <span class="token number">40</span> <span class="token keyword">then</span> salary<span class="token operator">*</span><span class="token number">1.2</span><span class="token keyword">WHEN</span> <span class="token number">50</span> <span class="token keyword">then</span> salary<span class="token operator">*</span><span class="token number">1.3</span><span class="token keyword">else</span> salary <span class="token keyword">end</span> <span class="token keyword">as</span> 新工资 <span class="token keyword">from</span> employees <span class="token keyword">order</span> <span class="token keyword">by</span> department_id <span class="token keyword">desc</span><span class="token punctuation">;</span></code></pre><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#3. case 函数的使用二:类似于多重if</span><span class="token comment" spellcheck="true">/*casewhen 条件1 then要显示的值1或语句1when 条件2 then要显示的值2或语句2。。。else 要显示的值n或语句nend*/</span><span class="token comment" spellcheck="true">/*#案例:查询员工的工资的情况如果工资>20000,显示A级别如果工资>15000,显示B级别如果工资>10000，显示c级别否则，显示D级别*/</span><span class="token keyword">select</span> employee_id<span class="token punctuation">,</span>salary<span class="token punctuation">,</span><span class="token keyword">CASE</span><span class="token keyword">when</span> salary<span class="token operator">></span><span class="token number">20000</span> <span class="token keyword">then</span> <span class="token string">'A'</span><span class="token keyword">when</span> salary<span class="token operator">></span><span class="token number">15000</span> <span class="token keyword">then</span> <span class="token string">'B'</span><span class="token keyword">when</span> salary<span class="token operator">></span><span class="token number">10000</span> <span class="token keyword">then</span> <span class="token string">'C'</span><span class="token keyword">else</span> <span class="token string">'D'</span><span class="token keyword">end</span> <span class="token keyword">as</span> 级别<span class="token keyword">from</span> employees<span class="token punctuation">;</span></code></pre><h4 id="4-2分组函数"><a href="#4-2分组函数" class="headerlink" title="4.2分组函数"></a>4.2分组函数</h4><p>功能:用作统计使用，又称为聚合函数或统计函数或组函数<br>分类: sum求和、avg平均值、max最大值、 min最小值、count 计算个数</p><p>特点:<br>    1、sum、 avg-般用于处理数值型,max、min、count可以处理任何类型<br>    2、以上分组函数都忽略null值<br>    3、可以和distinct搭配实现去重的运算<br>    4、count函数的单独介绍 一般使用count(*)用作统计行数<br>    5、和分组函数一同查询的字段要求是group by后的字段</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#1、简单的使用</span><span class="token keyword">select</span> <span class="token function">SUM</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token keyword">from</span> employees<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token function">AVG</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token keyword">from</span> employees<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token function">MAX</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token keyword">from</span> employees<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token function">MIN</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token keyword">from</span> employees<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token keyword">from</span> employees<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token function">SUM</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> 和<span class="token punctuation">,</span><span class="token function">AVG</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> 平均<span class="token punctuation">,</span><span class="token function">MAX</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> 最大<span class="token punctuation">,</span><span class="token function">MIN</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> 最小<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> 个数 <span class="token keyword">from</span> employees<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token function">SUM</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> 和<span class="token punctuation">,</span> <span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token function">AVG</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> 平均<span class="token punctuation">,</span><span class="token function">MAX</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> 最大<span class="token punctuation">,</span><span class="token function">MIN</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> 最小<span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> 个数 <span class="token keyword">from</span> employees<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#2.函数支持哪些类型</span><span class="token keyword">SELECT</span> <span class="token function">SUM</span><span class="token punctuation">(</span>last_name<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">AVG</span><span class="token punctuation">(</span>last_name<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees <span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">SUM</span><span class="token punctuation">(</span>hiredate<span class="token punctuation">)</span> <span class="token punctuation">,</span> <span class="token function">AVG</span> <span class="token punctuation">(</span>hiredate<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>last_name<span class="token punctuation">)</span> <span class="token punctuation">,</span><span class="token function">MIN</span><span class="token punctuation">(</span>last_name<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">MAX</span><span class="token punctuation">(</span>hiredate<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">MIN</span> <span class="token punctuation">(</span>hiredate<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span> <span class="token punctuation">(</span>commission_pct<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees <span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span> <span class="token punctuation">(</span>last_name<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees <span class="token punctuation">;</span><span class="token comment" spellcheck="true">#3.是否忽略null</span><span class="token keyword">select</span> <span class="token function">SUM</span><span class="token punctuation">(</span>commission_pct<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">AVG</span><span class="token punctuation">(</span>commission_pct<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">SUM</span><span class="token punctuation">(</span>commission_pct<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">35</span><span class="token punctuation">,</span><span class="token function">SUM</span><span class="token punctuation">(</span>commission_pct<span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">107</span> <span class="token keyword">from</span> employees<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token function">max</span><span class="token punctuation">(</span>commission_pct<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">min</span><span class="token punctuation">(</span>commission_pct<span class="token punctuation">)</span><span class="token keyword">from</span> employees<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>commission_pct<span class="token punctuation">)</span><span class="token keyword">from</span> employees<span class="token punctuation">;</span><span class="token keyword">select</span> commission_pct <span class="token keyword">from</span> employees<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#4、和distinct搭 配</span><span class="token keyword">SELECT</span> <span class="token function">SUM</span><span class="token punctuation">(</span><span class="token keyword">DISTINCT</span> salary<span class="token punctuation">)</span> <span class="token punctuation">,</span> <span class="token function">SUM</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token keyword">DISTINCT</span> salary<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">COUNT</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">FROM</span> employees<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#5.count函数的详细介绍</span><span class="token keyword">select</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">from</span> employees<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> employees<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">from</span> employees<span class="token punctuation">;</span><span class="token operator">/</span><span class="token operator">*</span>效率:MYISAM存储引擎下，<span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>的效率高<span class="token keyword">INNODB</span>存储引擎下，<span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>和<span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>的效率差不多，比<span class="token function">COUNT</span><span class="token punctuation">(</span>字段<span class="token punctuation">)</span>要高一些</code></pre><h3 id="5-分组查询"><a href="#5-分组查询" class="headerlink" title="5.分组查询"></a>5.分组查询</h3><p><strong>语法：</strong><br>        <strong>select 分组函数,列(要求出现在group by的后面)</strong><br>        <strong>from 表</strong><br>        <strong>[where 筛选条件]</strong><br>        <strong>group by 分组的列表</strong><br>        <strong>[order by 子句]</strong><br>        <strong>[having 筛选条件]</strong></p><p>注意:<br>查询列表必须特殊，要求是分组函数和group by后出现的字段</p><p>特点:<br>1、分组查询中的筛选条件分为两类<br>                               数据源                         位置                            关键字</p><p>分组前筛选            原始表                         group by子句的前面    where</p><p>分组后筛选            分组后的结果集          group by子句的后面     having<br>①分组函数做条件肯定是放在having子句中<br>②能用分组前筛选的，就优先考虑使用分组前筛选</p><p>2、group by子句支持单个字段分组，多个字段分组(多个字段之间用逗号隔开没有顺序要求)，表连式或函数(用得较少)<br>3、也可以添加排序(排序放在整个分组查询的最后)</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#引入:查询每个部门的平均工资</span><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">from</span> employees<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#简单的分组查询</span><span class="token comment" spellcheck="true">#案例1 :查询每个工种的最高工资</span><span class="token keyword">select</span> <span class="token function">MAX</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span>job_id<span class="token keyword">from</span> employees<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> job_id<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例2:查询每个位置上的部门个数</span><span class="token keyword">select</span> <span class="token function">COUNT</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span>location_id<span class="token keyword">from</span> departments<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> location_id<span class="token punctuation">;</span></code></pre><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#添加分组前的筛选条件</span><span class="token comment" spellcheck="true">#案例1:查询邮箱中包含a字符的，每个部门的平均工资</span><span class="token keyword">select</span> <span class="token function">AVG</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span>department_id<span class="token keyword">from</span> employees<span class="token keyword">where</span> email <span class="token operator">like</span> <span class="token string">'%a%'</span><span class="token keyword">group</span> <span class="token keyword">by</span> department_id<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例2:查询有奖金的每个领导手下员工的最高工资</span><span class="token keyword">select</span> <span class="token function">MAX</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span>manager_id<span class="token keyword">from</span> employees<span class="token keyword">where</span> commission_pct <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">NULL</span><span class="token keyword">group</span> <span class="token keyword">by</span> manager_id<span class="token punctuation">;</span></code></pre><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#添加分组后的筛选条件</span><span class="token comment" spellcheck="true">#案例1:查询哪个部门的员工个数>2</span><span class="token comment" spellcheck="true">#①查询每个部门的员工个数</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span>department_id<span class="token keyword">from</span> employees<span class="token keyword">group</span> <span class="token keyword">by</span> department_id<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#②根据①的结果进行筛选，查询哪个部门的员工个数>2</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span>department_id<span class="token keyword">from</span> employees<span class="token keyword">group</span> <span class="token keyword">by</span> department_id<span class="token keyword">having</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">2</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例2:查询每个工种有奖金的员工的最高工资>12000的工种编号和最高工资</span><span class="token comment" spellcheck="true">#①查询每个工种有奖金的员工的最高工资</span><span class="token keyword">select</span> <span class="token function">max</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span>job_id<span class="token keyword">from</span> employees<span class="token keyword">where</span> commission_pct <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token keyword">group</span> <span class="token keyword">by</span> job_id<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#②根据①结果继续筛选，最高工资>12000</span><span class="token keyword">select</span> <span class="token function">max</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span>job_id<span class="token keyword">from</span> employees<span class="token keyword">where</span> commission_pct <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token keyword">group</span> <span class="token keyword">by</span> job_id<span class="token keyword">having</span> <span class="token function">max</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token operator">></span><span class="token number">12000</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例3:查询领导编号>102的每个领导手下的最低工资>5000的领导编号是哪个，以及其最低工资</span><span class="token comment" spellcheck="true">#①查询每个领导手下的员工固定最低工资</span><span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span>manager_id<span class="token keyword">from</span> employees<span class="token keyword">group</span> <span class="token keyword">by</span> manager_id<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#②编号>102</span><span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span>manager_id<span class="token keyword">from</span> employees<span class="token keyword">where</span> manager_id<span class="token operator">></span><span class="token number">102</span><span class="token keyword">group</span> <span class="token keyword">by</span> manager_id<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#③最低工资>5000</span><span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span>manager_id<span class="token keyword">from</span> employees<span class="token keyword">where</span> manager_id<span class="token operator">></span><span class="token number">102</span><span class="token keyword">group</span> <span class="token keyword">by</span> manager_id<span class="token keyword">having</span> <span class="token function">min</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token operator">></span><span class="token number">5000</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例4:按员工姓名的长度分组，查询每一组的员工个数，筛选员工个数>5的有哪些</span><span class="token comment" spellcheck="true">#①查询每个长度的员工个数</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span>length<span class="token punctuation">(</span>last_name<span class="token punctuation">)</span><span class="token keyword">from</span> employees<span class="token keyword">group</span> <span class="token keyword">by</span> length<span class="token punctuation">(</span>last_name<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#②添加筛选条件</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span>length<span class="token punctuation">(</span>last_name<span class="token punctuation">)</span><span class="token keyword">from</span> employees<span class="token keyword">group</span> <span class="token keyword">by</span> length<span class="token punctuation">(</span>last_name<span class="token punctuation">)</span><span class="token keyword">having</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">5</span><span class="token punctuation">;</span></code></pre><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#按多个字段分组</span><span class="token comment" spellcheck="true">#案例:查询每个部门每个工种的员工的平均工资</span><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span>department_id<span class="token punctuation">,</span>job_id<span class="token keyword">from</span> employees<span class="token keyword">group</span> <span class="token keyword">by</span> department_id<span class="token punctuation">,</span>job_id<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#添加排序</span><span class="token comment" spellcheck="true">#案例:查询每个部门每个工种的员工的平均工资，并且按平均工资的高低显示</span><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span>department_id<span class="token punctuation">,</span>job_id<span class="token keyword">from</span> employees<span class="token keyword">group</span> <span class="token keyword">by</span> department_id<span class="token punctuation">,</span>job_id<span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token function">avg</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token keyword">desc</span><span class="token punctuation">;</span></code></pre><h3 id="6-连接查询"><a href="#6-连接查询" class="headerlink" title="6.连接查询"></a>6.连接查询</h3><p>含义: 又称多表查询， 当查询的字段来自于多个表时，就会用到连接查询<br>笛卡尔乘积现象:表1有m行，表2有n行，结果=m*n行<br>发生原因:没有有效的连接条件<br>如何避免:添加有效的连接条件</p><p>分类:</p><ol><li><p>按年代分类:</p><p>​    sq192标准: 仅仅支持内连接<br>​    sq199标准[推荐]: 支持内连接+外连接(左外和右外) +交叉连接</p></li><li><p>按功能分类:</p><p>内连接:</p><pre><code>    等值连接    非等值连接    自连接</code></pre><p>外连接:</p><pre><code>    左外连接    右外连接    全外连接</code></pre><p>交叉连接</p></li></ol><h4 id="一、sq192标准"><a href="#一、sq192标准" class="headerlink" title="一、sq192标准"></a><strong>一、sq192标准</strong></h4><h5 id="1-内连接"><a href="#1-内连接" class="headerlink" title="1.内连接"></a>1.内连接</h5><h6 id="a、等值连接"><a href="#a、等值连接" class="headerlink" title="a、等值连接"></a>a、等值连接</h6><p>①多表等值连接的结果为多表的交集部分<br>②n表连接，至少需要n-1个连接条件<br>③多表的顺序没有要求<br>④一般需要为表起别名<br>⑤可以搭配前面介绍的所有子向使用，比如排序、分组、筛选</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#1.简单连接查询</span><span class="token comment" spellcheck="true">#案例1:查询女神名和对应的男神名</span><span class="token keyword">select</span> name<span class="token punctuation">,</span>boyName <span class="token keyword">from</span> boys<span class="token punctuation">,</span>beauty<span class="token keyword">where</span>  boys<span class="token punctuation">.</span>id<span class="token operator">=</span>beauty<span class="token punctuation">.</span>boyfriend_id<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例2:查询员工名和对应的部门名</span><span class="token keyword">select</span> last_name<span class="token punctuation">,</span>department_name<span class="token keyword">from</span> employees<span class="token punctuation">,</span>departments<span class="token keyword">where</span> employees<span class="token punctuation">.</span>department_id<span class="token operator">=</span>departments<span class="token punctuation">.</span>department_id<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#2、为表起别名</span><span class="token comment" spellcheck="true">/*①提高语句的简洁度②区分多个重名的字段注意:如果为表起了别名，则查询的字段就不能使用原来的表名去限定*/</span><span class="token comment" spellcheck="true">#查询员工名、工种号、工种名</span><span class="token keyword">select</span> last_name<span class="token punctuation">,</span><span class="token number">e</span><span class="token punctuation">.</span>job_id<span class="token punctuation">,</span>job_title<span class="token keyword">from</span> employees <span class="token number">e</span><span class="token punctuation">,</span>jobs j<span class="token keyword">where</span> <span class="token number">e</span><span class="token punctuation">.</span>job_id<span class="token operator">=</span>j<span class="token punctuation">.</span>job_id<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#3、两个表的顺序是否可以调换</span><span class="token comment" spellcheck="true">#查询员工名、工种号、工种名</span><span class="token keyword">select</span> last_name<span class="token punctuation">,</span><span class="token number">e</span><span class="token punctuation">.</span>job_id<span class="token punctuation">,</span>job_title<span class="token keyword">from</span> jobs j<span class="token punctuation">,</span>employees <span class="token number">e</span><span class="token keyword">where</span> <span class="token number">e</span><span class="token punctuation">.</span>job_id<span class="token operator">=</span>j<span class="token punctuation">.</span>job_id<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#4、可以加筛选?</span><span class="token comment" spellcheck="true">#案例1:查询有奖金的员工名、部门名</span><span class="token keyword">select</span> last_name<span class="token punctuation">,</span>department_name<span class="token punctuation">,</span>commission_pct<span class="token keyword">from</span> employees <span class="token number">e</span><span class="token punctuation">,</span>departments <span class="token number">d</span><span class="token keyword">where</span> <span class="token number">e</span><span class="token punctuation">.</span>department_id <span class="token operator">=</span> <span class="token number">d</span><span class="token punctuation">.</span>department_id<span class="token operator">and</span> commission_pct <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例2:查询城市名中第二个字符为o的部门名和城市名</span><span class="token keyword">select</span> department_name<span class="token punctuation">,</span>city<span class="token keyword">from</span> departments <span class="token number">d</span><span class="token punctuation">,</span>locations l<span class="token keyword">where</span> <span class="token number">d</span><span class="token punctuation">.</span>location_id<span class="token operator">=</span>l<span class="token punctuation">.</span>location_id<span class="token operator">and</span> city <span class="token operator">like</span> <span class="token string">'_o%'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#5、可以加分组?</span><span class="token comment" spellcheck="true">#案例1:查询每个城市的部门个数</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span>city<span class="token keyword">from</span> departments <span class="token number">d</span><span class="token punctuation">,</span>locations l<span class="token keyword">where</span> <span class="token number">d</span><span class="token punctuation">.</span>location_id<span class="token operator">=</span>l<span class="token punctuation">.</span>location_id<span class="token keyword">group</span> <span class="token keyword">by</span> city<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例2:查询有奖金的每个部门的部门名和部门的领导编号和该部门的最低工资</span><span class="token keyword">select</span> department_name<span class="token punctuation">,</span><span class="token number">d</span><span class="token punctuation">.</span>manager_id<span class="token punctuation">,</span><span class="token function">min</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token keyword">from</span> employees <span class="token number">e</span><span class="token punctuation">,</span>departments <span class="token number">d</span><span class="token keyword">where</span> <span class="token number">e</span><span class="token punctuation">.</span>department_id <span class="token operator">=</span> <span class="token number">d</span><span class="token punctuation">.</span>department_id<span class="token operator">and</span> commission_pct <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token keyword">group</span> <span class="token keyword">by</span> department_name<span class="token punctuation">,</span>manager_id<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#6、 可以加排序</span><span class="token comment" spellcheck="true">#案例:查询每个工种的工种名和员工的个数，并且按员工个数降序</span><span class="token keyword">select</span> job_title<span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token keyword">from</span> employees <span class="token number">e</span><span class="token punctuation">,</span>jobs j<span class="token keyword">where</span> <span class="token number">e</span><span class="token punctuation">.</span>job_id <span class="token operator">=</span>j<span class="token punctuation">.</span>job_id<span class="token keyword">group</span> <span class="token keyword">by</span> job_title<span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">desc</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#7、可以实现三表连接?</span><span class="token comment" spellcheck="true">#案例:查询员工名、部门名和所在的城市</span><span class="token keyword">select</span> last_name<span class="token punctuation">,</span>department_name<span class="token punctuation">,</span>city<span class="token keyword">from</span> employees <span class="token number">e</span><span class="token punctuation">,</span>departments <span class="token number">d</span><span class="token punctuation">,</span>locations l<span class="token keyword">where</span> <span class="token number">e</span><span class="token punctuation">.</span>department_id<span class="token operator">=</span><span class="token number">d</span><span class="token punctuation">.</span>department_id <span class="token operator">and</span> <span class="token number">d</span><span class="token punctuation">.</span>location_id <span class="token operator">=</span> l<span class="token punctuation">.</span>location_id<span class="token punctuation">;</span></code></pre><h6 id="b、非等值连接"><a href="#b、非等值连接" class="headerlink" title="b、非等值连接"></a>b、非等值连接</h6><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#案例1:查询员工的工资和工资级别</span><span class="token keyword">select</span> salary<span class="token punctuation">,</span>grade_level<span class="token keyword">from</span> employees <span class="token number">e</span><span class="token punctuation">,</span>job_grades j<span class="token keyword">where</span> salary <span class="token operator">between</span> lowest_sal <span class="token operator">and</span> highest_sal<span class="token keyword">order</span> <span class="token keyword">by</span> salary <span class="token keyword">desc</span><span class="token punctuation">;</span></code></pre><h6 id="c、自连接"><a href="#c、自连接" class="headerlink" title="c、自连接"></a>c、自连接</h6><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#案例1:查询员工名和上级的名称</span><span class="token keyword">select</span> <span class="token number">ea</span><span class="token punctuation">.</span>last_name<span class="token punctuation">,</span><span class="token number">ea</span><span class="token punctuation">.</span>employee_id<span class="token punctuation">,</span><span class="token number">eb</span><span class="token punctuation">.</span>last_name<span class="token punctuation">,</span><span class="token number">eb</span><span class="token punctuation">.</span>employee_id<span class="token keyword">from</span> employees <span class="token number">ea</span><span class="token punctuation">,</span>employees <span class="token number">eb</span><span class="token keyword">where</span> <span class="token number">ea</span><span class="token punctuation">.</span>manager_id<span class="token operator">=</span><span class="token number">eb</span><span class="token punctuation">.</span>employee_id<span class="token punctuation">;</span></code></pre><h4 id="二-sq199标准"><a href="#二-sq199标准" class="headerlink" title="二.sq199标准"></a>二.sq199标准</h4><p><strong>语法:</strong><br>        <strong>select 查询列表</strong><br>        <strong>from 表1 别名 [连接类型]</strong><br>        <strong>join 表2 别名</strong><br>        <strong>on 连接条件</strong><br>        <strong>[where 筛选条件]</strong><br>        <strong>[group by 分组]</strong><br>        <strong>[having 筛选条件]</strong><br>        <strong>[order by 排序列表]</strong><br><strong>分类:</strong><br>        <strong>内连接(★) : inner</strong><br>        <strong>外连接</strong><br>                <strong>左外(★) :left [outer]</strong><br>                <strong>右外(★) :right [outer]</strong><br>                <strong>全外: full[outer]</strong><br>        <strong>交叉连接: cross</strong></p><p><strong>功能: sq199支 持的较多</strong><br><strong>可读性: sq199实现连接 条件和筛选条件的分离，可读性较高</strong></p><h5 id="1-内连接-1"><a href="#1-内连接-1" class="headerlink" title="1.内连接"></a>1.内连接</h5><p>语法:<br>select 查询列表<br>from 表1 别名<br>inner join 表2 别名<br>on 连接条件;</p><p>特点:<br>①添加排序、分组、筛选<br>②inner可以省略<br>③筛选条件放在where后面，连接条件放在on后面，提高分离性，便于阅读<br>④inner join连 接和sq192语法中的等值连接效果是一样的，都是查询多表的交集</p><h6 id="a、等值连接-1"><a href="#a、等值连接-1" class="headerlink" title="a、等值连接"></a>a、等值连接</h6><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#案例1.查询员工名、部门名</span><span class="token keyword">select</span> last_name<span class="token punctuation">,</span>department_name<span class="token keyword">from</span> employees <span class="token number">e</span> <span class="token keyword">inner</span> <span class="token keyword">join</span> departments <span class="token number">d</span><span class="token keyword">on</span> <span class="token number">e</span><span class="token punctuation">.</span>department_id<span class="token operator">=</span><span class="token number">d</span><span class="token punctuation">.</span>department_id<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例2.查询名字中包含e的员工名和工种名(筛选)</span><span class="token keyword">select</span> last_name<span class="token punctuation">,</span>job_title<span class="token keyword">from</span> employees <span class="token number">e</span> <span class="token keyword">inner</span> <span class="token keyword">join</span> jobs j<span class="token keyword">on</span> <span class="token number">e</span><span class="token punctuation">.</span>job_id<span class="token operator">=</span>j<span class="token punctuation">.</span>job_id<span class="token keyword">where</span> <span class="token number">e</span><span class="token punctuation">.</span>last_name <span class="token operator">like</span> <span class="token string">'%e%'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例3.查询部门个数>3的城市名名和部门个数(分组+筛选)</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span>l<span class="token punctuation">.</span>city<span class="token keyword">from</span> departments <span class="token number">d</span> <span class="token keyword">inner</span> <span class="token keyword">join</span> locations l<span class="token keyword">on</span> <span class="token number">d</span><span class="token punctuation">.</span>location_id<span class="token operator">=</span>l<span class="token punctuation">.</span>location_id<span class="token keyword">group</span> <span class="token keyword">by</span> l<span class="token punctuation">.</span>city <span class="token keyword">having</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">3</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例4.查询哪个部门的员工个数>3的部门名和员工个数，并按个数降序(排序)</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span>department_name<span class="token keyword">from</span> employees <span class="token number">e</span> <span class="token keyword">inner</span> <span class="token keyword">join</span>  departments <span class="token number">d</span> <span class="token keyword">on</span> <span class="token number">e</span><span class="token punctuation">.</span>department_id<span class="token operator">=</span><span class="token number">d</span><span class="token punctuation">.</span>department_id<span class="token keyword">group</span> <span class="token keyword">by</span> department_name <span class="token keyword">having</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">3</span><span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">desc</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例5.查询员工名、部门名、工种名，并按部门名降序</span><span class="token keyword">select</span> last_name<span class="token punctuation">,</span>department_name<span class="token punctuation">,</span>job_title<span class="token keyword">FROM</span> employees <span class="token number">e</span> <span class="token keyword">inner</span> <span class="token keyword">join</span> departments <span class="token number">d</span> <span class="token keyword">on</span> <span class="token number">e</span><span class="token punctuation">.</span>department_id<span class="token operator">=</span><span class="token number">d</span><span class="token punctuation">.</span>department_id<span class="token keyword">inner</span> <span class="token keyword">join</span> jobs j <span class="token keyword">on</span> <span class="token number">e</span><span class="token punctuation">.</span>job_id<span class="token operator">=</span>j<span class="token punctuation">.</span>job_id<span class="token keyword">order</span> <span class="token keyword">by</span> department_name <span class="token keyword">DESC</span><span class="token punctuation">;</span></code></pre><h6 id="b、非等值连接-1"><a href="#b、非等值连接-1" class="headerlink" title="b、非等值连接"></a>b、非等值连接</h6><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#查询员工的工资级别</span><span class="token keyword">select</span> last_name<span class="token punctuation">,</span>salary<span class="token punctuation">,</span>grade_level<span class="token keyword">from</span> employees <span class="token number">e</span><span class="token keyword">inner</span> <span class="token keyword">join</span> job_grades j<span class="token keyword">on</span> <span class="token number">e</span><span class="token punctuation">.</span>salary <span class="token operator">between</span> j<span class="token punctuation">.</span>lowest_sal <span class="token operator">and</span> j<span class="token punctuation">.</span>highest_sal<span class="token keyword">order</span> <span class="token keyword">by</span> grade_level <span class="token keyword">desc</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#查询工资级别的个数>2的个数，并且按工资级别降序</span><span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">,</span>grade_level<span class="token keyword">from</span> employees <span class="token number">e</span><span class="token keyword">inner</span> <span class="token keyword">join</span> job_grades j<span class="token keyword">on</span> <span class="token number">e</span><span class="token punctuation">.</span>salary <span class="token operator">between</span> j<span class="token punctuation">.</span>lowest_sal <span class="token operator">and</span> j<span class="token punctuation">.</span>highest_sal<span class="token keyword">group</span> <span class="token keyword">by</span> grade_level<span class="token keyword">having</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">2</span><span class="token keyword">order</span> <span class="token keyword">by</span> grade_level <span class="token keyword">desc</span><span class="token punctuation">;</span></code></pre><h6 id="c、自连接-1"><a href="#c、自连接-1" class="headerlink" title="c、自连接"></a>c、自连接</h6><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#查询员工的名字、上级的名字</span><span class="token keyword">select</span> <span class="token number">e</span><span class="token punctuation">.</span>last_name<span class="token punctuation">,</span>em<span class="token punctuation">.</span>last_name<span class="token keyword">from</span> employees <span class="token number">e</span><span class="token keyword">inner</span> <span class="token keyword">join</span> employees em<span class="token keyword">on</span> <span class="token number">e</span><span class="token punctuation">.</span>manager_id<span class="token operator">=</span>em<span class="token punctuation">.</span>employee_id<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#查询姓名中包含字符k的员工的名字、上级的名字</span><span class="token keyword">select</span> <span class="token number">e</span><span class="token punctuation">.</span>last_name<span class="token punctuation">,</span>em<span class="token punctuation">.</span>last_name<span class="token keyword">from</span> employees <span class="token number">e</span><span class="token keyword">inner</span> <span class="token keyword">join</span> employees em<span class="token keyword">on</span> <span class="token number">e</span><span class="token punctuation">.</span>manager_id<span class="token operator">=</span>em<span class="token punctuation">.</span>employee_id<span class="token keyword">where</span> <span class="token number">e</span><span class="token punctuation">.</span>last_name <span class="token operator">like</span> <span class="token string">'%k%'</span><span class="token punctuation">;</span></code></pre><h5 id="2、外连接"><a href="#2、外连接" class="headerlink" title="2、外连接"></a>2、外连接</h5><h6 id="a、左外连接"><a href="#a、左外连接" class="headerlink" title="a、左外连接"></a>a、左外连接</h6><p><img src="https://github.com/LumenXS/LumenXS.github.io/blob/master/2021/12/01/MySQL%E7%AC%94%E8%AE%B0/image-20211117170420078.png" alt="image-20211117170327266"></p><h6 id="b、右外连接"><a href="#b、右外连接" class="headerlink" title="b、右外连接"></a>b、右外连接</h6><p><img src="https://github.com/LumenXS/LumenXS.github.io/blob/master/2021/12/01/MySQL%E7%AC%94%E8%AE%B0/image-20211117170420078.png" alt="image-20211117170420078"></p><p>应用场景:用于查询一个表中有，另一个表没有的记录<br>特点:<br>1、外连接的查询结果为主表中的所有记录<br>        如果从表中有和它匹配的，则显示匹配的值<br>        如果从表中没有和它匹配的，则显示null<br>        外连接查询结果=内连接结果+主表中有而从表没有的记录<br>2、左外连接，left join左边的是主表<br>     右外连接，right join右边的是主表<br>3、左外和右外交换两个表的顺序，可以实现同样的效果<br>4、全外连接=内连接的结果+表1中有但表2没有的+表2中有但表1没有的</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#引入:查询男朋友不在男神表的的女神名</span><span class="token comment" spellcheck="true">#左外连接</span><span class="token keyword">select</span> <span class="token number">b</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span>bo<span class="token punctuation">.</span><span class="token operator">*</span><span class="token keyword">from</span> beauty <span class="token number">b</span><span class="token keyword">left</span> <span class="token keyword">outer</span> <span class="token keyword">join</span> boys bo<span class="token keyword">on</span> <span class="token number">b</span><span class="token punctuation">.</span>boyfriend_id<span class="token operator">=</span>bo<span class="token punctuation">.</span>id<span class="token keyword">where</span> bo<span class="token punctuation">.</span>id <span class="token operator">is</span> <span class="token boolean">null</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#右外连接</span><span class="token keyword">select</span> <span class="token number">b</span><span class="token punctuation">.</span>name<span class="token punctuation">,</span>bo<span class="token punctuation">.</span><span class="token operator">*</span><span class="token keyword">from</span> boys bo<span class="token keyword">right</span> <span class="token keyword">outer</span> <span class="token keyword">join</span> beauty <span class="token number">b</span><span class="token keyword">on</span> <span class="token number">b</span><span class="token punctuation">.</span>boyfriend_id<span class="token operator">=</span>bo<span class="token punctuation">.</span>id<span class="token keyword">where</span> bo<span class="token punctuation">.</span>id <span class="token operator">is</span> <span class="token boolean">null</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例1:查询哪个部门没有员工</span><span class="token comment" spellcheck="true">#左外连接</span><span class="token keyword">select</span> department_name<span class="token punctuation">,</span>employee_id<span class="token keyword">from</span> departments <span class="token number">d</span><span class="token keyword">left</span> <span class="token keyword">outer</span> <span class="token keyword">join</span> employees <span class="token number">e</span><span class="token keyword">on</span> <span class="token number">d</span><span class="token punctuation">.</span>department_id<span class="token operator">=</span><span class="token number">e</span><span class="token punctuation">.</span>department_id<span class="token keyword">where</span> <span class="token number">e</span><span class="token punctuation">.</span>employee_id <span class="token operator">is</span> <span class="token boolean">null</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#右外连接</span><span class="token keyword">select</span> department_name<span class="token punctuation">,</span>employee_id<span class="token keyword">from</span> employees <span class="token number">e</span><span class="token keyword">right</span> <span class="token keyword">outer</span> <span class="token keyword">join</span> departments <span class="token number">d</span><span class="token keyword">on</span> <span class="token number">d</span><span class="token punctuation">.</span>department_id<span class="token operator">=</span><span class="token number">e</span><span class="token punctuation">.</span>department_id<span class="token keyword">where</span> <span class="token number">e</span><span class="token punctuation">.</span>employee_id <span class="token operator">is</span> <span class="token boolean">null</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#全外连接</span><span class="token keyword">select</span> <span class="token number">b</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">,</span>bo<span class="token punctuation">.</span><span class="token operator">*</span><span class="token keyword">from</span> beauty <span class="token number">b</span> <span class="token keyword">FULL</span> <span class="token keyword">JOIN</span> boys bo <span class="token keyword">on</span> <span class="token number">b</span><span class="token punctuation">.</span>boyfriend_id <span class="token operator">=</span> bo<span class="token punctuation">.</span>id<span class="token punctuation">;</span></code></pre><h5 id="3、交叉连接"><a href="#3、交叉连接" class="headerlink" title="3、交叉连接"></a>3、交叉连接</h5><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#类似笛卡尔积</span><span class="token keyword">SELECT</span> <span class="token number">b</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">,</span>bo<span class="token punctuation">.</span><span class="token operator">*</span><span class="token keyword">FROM</span> beauty <span class="token number">b</span><span class="token keyword">CROSS</span> <span class="token keyword">JOIN</span> boys bo<span class="token punctuation">;</span></code></pre><h3 id="7-子查询"><a href="#7-子查询" class="headerlink" title="7.子查询"></a>7.子查询</h3><p>含义:<br>    出现在其他语句中的select语句，称为子查询或内查询<br>    外部的查询语句，称为主查询或外查询<br>分类:<br>    按子查询出现的位置:<br>            select后面<br>                    标量子查询<br>            from后面<br>                    表子查询<br>            where或having后面<br>                    标量子查询 (单行)<br>                    列子查询  （多行）<br>                    行子查询<br>            exists后面(相关子查询)<br>                    表子查询<br>    按结果集的行列数不同:<br>            标量子查询(结果集只有一行一列)<br>            列子查询(结果集只有一列多行)<br>            行子查询(结果集有一行多列)<br>            表子查询(结果集一般为多行多列)</p><h4 id="一、where或having后面"><a href="#一、where或having后面" class="headerlink" title="一、where或having后面"></a>一、where或having后面</h4><p>1、标量子查询(单行子查询)<br>2、列子查询(多行子查询)<br>3、行子查询(多列多行)</p><p>特点:<br>①子查询放在小括号内<br>②子查询一般放在条件的右侧<br>③标量子查询，一般搭配着单行操作符使用: &lt; &gt;= &lt;= = &lt;&gt;</p><p>④列子查询，一般搭配着多行操作符使用: IN、 ANY/SOME、 ALL<br>⑤子查询的执行优先于主查询执行，主查询的条件用到了子查询的结果</p><h5 id="1-标量子查询-单行子查询"><a href="#1-标量子查询-单行子查询" class="headerlink" title="1.标量子查询(单行子查询)"></a>1.标量子查询(单行子查询)</h5><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#案例1:谁的工资比Abel高?</span><span class="token comment" spellcheck="true">#①查询Abel的工资</span><span class="token keyword">select</span> salary <span class="token keyword">from</span> employees <span class="token keyword">where</span> last_name<span class="token operator">=</span><span class="token string">'Abel'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#②查询员工的信息，满足salary>①结果</span><span class="token keyword">select</span> last_name<span class="token punctuation">,</span>salary<span class="token keyword">from</span> employees <span class="token keyword">where</span> salary<span class="token operator">></span><span class="token punctuation">(</span>    <span class="token keyword">select</span> salary <span class="token keyword">from</span> employees     <span class="token keyword">where</span> last_name<span class="token operator">=</span><span class="token string">'Abel'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例2:返回job_id与141号员工相同，salary比143号员工多的员工的姓名，job_id 和工资</span><span class="token comment" spellcheck="true">#①查询141号员工的job_id </span><span class="token keyword">select</span> job_id<span class="token keyword">from</span> employees<span class="token keyword">where</span> employee_id<span class="token operator">=</span><span class="token number">141</span><span class="token comment" spellcheck="true">#②查询143号员工的salary</span><span class="token keyword">select</span> salary<span class="token keyword">from</span> employees<span class="token keyword">where</span> employee_id<span class="token operator">=</span><span class="token number">141</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#③查询员工的姓名，job_ id和工资，</span><span class="token keyword">select</span> last_name<span class="token punctuation">,</span>job_id<span class="token punctuation">,</span>salary<span class="token keyword">from</span> employees<span class="token keyword">where</span> job_id<span class="token operator">=</span><span class="token punctuation">(</span>    <span class="token keyword">select</span> job_id    <span class="token keyword">from</span> employees    <span class="token keyword">where</span> employee_id<span class="token operator">=</span><span class="token number">141</span><span class="token punctuation">)</span><span class="token operator">and</span> salary<span class="token operator">></span><span class="token punctuation">(</span>    <span class="token keyword">select</span> salary    <span class="token keyword">from</span> employees    <span class="token keyword">where</span> employee_id<span class="token operator">=</span><span class="token number">141</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例3:返回公司工资最少的员工的last_name, job_ id和salary</span><span class="token comment" spellcheck="true">#①查询公司的最低工资</span><span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token keyword">from</span> employees<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#②查询last_name,job_id和salary, 要求salary=①</span><span class="token keyword">select</span> last_name<span class="token punctuation">,</span>job_id<span class="token punctuation">,</span>salary<span class="token keyword">from</span> employees<span class="token keyword">where</span> salary<span class="token operator">=</span><span class="token punctuation">(</span>    <span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span>    <span class="token keyword">from</span> employees<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例4:查询最低工资大于50号部门最低工资的部门id和其最低工资</span><span class="token comment" spellcheck="true">#①查询50号部门的最低工资</span><span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token keyword">from</span> employees <span class="token keyword">where</span> department_id<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#②查询每个部门的最低工资</span><span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span>department_id<span class="token keyword">from</span> employees <span class="token keyword">group</span> <span class="token keyword">by</span> department_id<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#③在②基础_上筛选，满足min (salary)>①</span><span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span>department_id<span class="token keyword">from</span> employees <span class="token keyword">group</span> <span class="token keyword">by</span> department_id<span class="token keyword">having</span> <span class="token function">min</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token operator">></span><span class="token punctuation">(</span>        <span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span>        <span class="token keyword">from</span> employees         <span class="token keyword">where</span> department_id<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h5 id="2-列子查询-多行子查询"><a href="#2-列子查询-多行子查询" class="headerlink" title="2.列子查询(多行子查询)"></a>2.列子查询(多行子查询)</h5><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#案例1:返回location_ id是1400或1700的部门中的所有员工姓名</span><span class="token comment" spellcheck="true">#①查询location id是1400或1700的部门编号</span><span class="token keyword">select</span> <span class="token keyword">distinct</span> department_id<span class="token keyword">from</span> departments<span class="token keyword">where</span> location_id <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token number">1400</span><span class="token punctuation">,</span><span class="token number">1700</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#②查询员工姓名，要求部门号是①列表中的某一个</span><span class="token keyword">select</span> last_name<span class="token keyword">from</span> employees<span class="token keyword">where</span> department_id<span class="token operator">=</span><span class="token keyword">any</span><span class="token punctuation">(</span>    <span class="token keyword">select</span> <span class="token keyword">distinct</span> department_id    <span class="token keyword">from</span> departments    <span class="token keyword">where</span> location_id <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token number">1400</span><span class="token punctuation">,</span><span class="token number">1700</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例2:返回其它工种中比job_id为'IT_ PROG'工种任一工资低的员工的:工号、姓名、job_ id以及salary</span><span class="token comment" spellcheck="true">#①查询job_ id为'IT_ PROG' 工种任一工资</span><span class="token keyword">select</span> <span class="token keyword">distinct</span> salary<span class="token keyword">from</span> employees<span class="token keyword">where</span> job_id<span class="token operator">=</span><span class="token string">'IT_PROG'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#②查询员工号、姓名、job_ id以及salary，salary&lt; (①)的任意一个</span><span class="token keyword">select</span> last_name<span class="token punctuation">,</span>employee_id<span class="token punctuation">,</span>job_id<span class="token punctuation">,</span>salary<span class="token keyword">from</span> employees<span class="token keyword">where</span> salary<span class="token operator">&lt;</span><span class="token keyword">any</span><span class="token punctuation">(</span>    <span class="token keyword">select</span> <span class="token keyword">distinct</span> salary    <span class="token keyword">from</span> employees    <span class="token keyword">where</span> job_id<span class="token operator">=</span><span class="token string">'IT_PROG'</span><span class="token punctuation">)</span><span class="token operator">and</span> job_id<span class="token operator">&lt;></span><span class="token string">'IT_PROG'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例3:返回其它工种中比job_id为'IT_ PROG'工种所有工资都低的员工的:工号、姓名、job_ id以及salary</span><span class="token keyword">select</span> last_name<span class="token punctuation">,</span>employee_id<span class="token punctuation">,</span>job_id<span class="token punctuation">,</span>salary<span class="token keyword">from</span> employees<span class="token keyword">where</span> salary<span class="token operator">&lt;</span><span class="token keyword">all</span><span class="token punctuation">(</span>    <span class="token keyword">select</span> <span class="token keyword">distinct</span> salary    <span class="token keyword">from</span> employees    <span class="token keyword">where</span> job_id<span class="token operator">=</span><span class="token string">'IT_PROG'</span><span class="token punctuation">)</span><span class="token operator">and</span> job_id<span class="token operator">&lt;></span><span class="token string">'IT_PROG'</span><span class="token punctuation">;</span></code></pre><h5 id="3-行子查询-结果集一行多列或多行多列"><a href="#3-行子查询-结果集一行多列或多行多列" class="headerlink" title="3.行子查询(结果集一行多列或多行多列)"></a>3.行子查询(结果集一行多列或多行多列)</h5><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#案例:查询员工编号最小并且工资最高的员工信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> employees<span class="token keyword">where</span> <span class="token punctuation">(</span>employee_id<span class="token punctuation">,</span>salary<span class="token punctuation">)</span><span class="token operator">=</span><span class="token punctuation">(</span>    <span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span>employee_id<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">max</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span>    <span class="token keyword">from</span> employees<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#①查询最小的员工编号</span><span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span>employee_id<span class="token punctuation">)</span><span class="token keyword">from</span> employees<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#②查询最高工资</span><span class="token keyword">select</span> <span class="token function">max</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token keyword">from</span> employees<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#③查询员工信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> employees<span class="token keyword">where</span> employee_id<span class="token operator">=</span><span class="token punctuation">(</span>    <span class="token keyword">select</span> <span class="token function">min</span><span class="token punctuation">(</span>employee_id<span class="token punctuation">)</span>    <span class="token keyword">from</span> employees<span class="token punctuation">)</span><span class="token operator">and</span> salary<span class="token operator">=</span><span class="token punctuation">(</span>    <span class="token keyword">select</span> <span class="token function">max</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span>    <span class="token keyword">from</span> employees<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h4 id="二、select后面"><a href="#二、select后面" class="headerlink" title="二、select后面"></a>二、select后面</h4><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#案例1:查询每个部门的员工个数</span><span class="token comment" spellcheck="true">#子查询</span><span class="token keyword">select</span> <span class="token number">d</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">,</span><span class="token punctuation">(</span>    <span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span>    <span class="token keyword">from</span> employees <span class="token number">e</span>    <span class="token keyword">where</span> <span class="token number">e</span><span class="token punctuation">.</span>department_id<span class="token operator">=</span><span class="token number">d</span><span class="token punctuation">.</span>department_id<span class="token punctuation">)</span><span class="token keyword">from</span> departments <span class="token number">d</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#连接查询</span><span class="token keyword">select</span> <span class="token number">d</span><span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">,</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token number">e</span><span class="token punctuation">.</span>department_id<span class="token punctuation">)</span><span class="token keyword">from</span> employees <span class="token number">e</span><span class="token keyword">right</span> <span class="token keyword">join</span> departments <span class="token number">d</span> <span class="token keyword">on</span> <span class="token number">e</span><span class="token punctuation">.</span>department_id <span class="token operator">=</span><span class="token number">d</span><span class="token punctuation">.</span>department_id<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token number">d</span><span class="token punctuation">.</span>department_id<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例2:查询员工号=102的部门名</span><span class="token keyword">select</span><span class="token punctuation">(</span>    <span class="token keyword">select</span> department_name    <span class="token keyword">from</span> employees <span class="token number">e</span>    <span class="token keyword">inner</span> <span class="token keyword">join</span> departments <span class="token number">d</span>    <span class="token keyword">on</span> <span class="token number">e</span><span class="token punctuation">.</span>department_id<span class="token operator">=</span><span class="token number">d</span><span class="token punctuation">.</span>department_id    <span class="token keyword">where</span> employee_id<span class="token operator">=</span><span class="token number">102</span><span class="token punctuation">)</span> 部门名<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token number">23</span> 数字：</code></pre><h4 id="三、from后面"><a href="#三、from后面" class="headerlink" title="三、from后面"></a>三、from后面</h4><p>将子查询结果充当一张表，要求必须取别名</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#案例:查询每个部门的平均工资的工资等级</span><span class="token comment" spellcheck="true">#①查询每个部门的平均工资</span><span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span><span class="token punctuation">,</span>department_id<span class="token keyword">from</span> employees <span class="token keyword">group</span> <span class="token keyword">by</span> department_id<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#②连接①的结果集和job_grades表， 筛选条件平均工资between lowest_sal and highest_sal</span><span class="token keyword">select</span> aq<span class="token punctuation">.</span><span class="token operator">*</span><span class="token punctuation">,</span>j<span class="token punctuation">.</span>grade_level<span class="token keyword">from</span> <span class="token punctuation">(</span>            <span class="token keyword">select</span> <span class="token function">avg</span><span class="token punctuation">(</span>salary<span class="token punctuation">)</span> <span class="token number">a</span><span class="token punctuation">,</span>department_id            <span class="token keyword">from</span> employees             <span class="token keyword">group</span> <span class="token keyword">by</span> department_id            <span class="token punctuation">)</span> aq<span class="token keyword">inner</span> <span class="token keyword">join</span> job_grades j<span class="token keyword">on</span> aq<span class="token number">.a</span> <span class="token operator">between</span> lowest_sal <span class="token operator">and</span> highest_sal<span class="token punctuation">;</span></code></pre><h4 id="四、exists后面-相关子查询"><a href="#四、exists后面-相关子查询" class="headerlink" title="四、exists后面(相关子查询)"></a>四、exists后面(相关子查询)</h4><p>​    语法:<br>​        exists (完整的查询语句)<br>​    结果:<br>​        1或0</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#案例1:查询有员工的部门名</span><span class="token keyword">SELECT</span> <span class="token number">d</span><span class="token punctuation">.</span>department_name<span class="token keyword">from</span> departments <span class="token number">d</span><span class="token keyword">where</span> <span class="token number">d</span><span class="token punctuation">.</span>department_id <span class="token operator">in</span><span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">DISTINCT</span> department_id<span class="token keyword">from</span> employees<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">SELECT</span> <span class="token number">d</span><span class="token punctuation">.</span>department_name<span class="token keyword">from</span> departments <span class="token number">d</span><span class="token keyword">where</span> <span class="token keyword">EXISTS</span><span class="token punctuation">(</span>    <span class="token keyword">select</span> <span class="token number">e</span><span class="token punctuation">.</span><span class="token operator">*</span>     <span class="token keyword">from</span> employees <span class="token number">e</span>    <span class="token keyword">where</span> <span class="token number">d</span><span class="token punctuation">.</span>department_id<span class="token operator">=</span><span class="token number">e</span><span class="token punctuation">.</span>department_id<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h3 id="8-分页查询"><a href="#8-分页查询" class="headerlink" title="8.分页查询"></a>8.分页查询</h3><p>应用场景:当要显示的数据，一页显示不全，需要分页提交sql请求<br><strong>语法:</strong><br>        <strong>select 查询列表</strong><br>        <strong>from 表1 别名</strong><br>        <strong>【连接类型】join 表2 别名</strong><br>        <strong>on 连接条件</strong><br>        <strong>where 筛选条件</strong><br>        <strong>group by 分组字段</strong><br>        <strong>having  分组后的筛选</strong><br>        <strong>order by  排序的字段</strong><br>        <strong>limit  offset，size;</strong></p><p>​        offset要显示条目的起始索引(起始索引从0开始)<br>​        size要显示的条目个数</p><p>特点:<br>    ①limit语句放在查询语句的最后<br>    ②公式<br>    要显示的页数page，每页的条目数size<br>        <strong>select  查询列表</strong><br>        <strong>from  表</strong><br>        <strong>limit (page-1) size, size;</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#案例1:查询前五条员工信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> employees <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例2:查询第11条一第25条</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> employees <span class="token keyword">limit</span> <span class="token number">10</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例3:有奖金的员工信息，并且工资较高的前10名显示出来</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> employees <span class="token keyword">where</span> commission_pct <span class="token operator">is</span> <span class="token operator">not</span> <span class="token boolean">null</span> <span class="token keyword">order</span> <span class="token keyword">by</span> salary <span class="token keyword">desc</span> <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">;</span></code></pre><h3 id="9-联合查询"><a href="#9-联合查询" class="headerlink" title="9.联合查询"></a>9.联合查询</h3><p>union联合合并:将多条查询语句的结果合并成一个结果<br><strong>语法:</strong><br><strong>查询语句1</strong><br><strong>union</strong><br><strong>查询语句2</strong><br><strong>union</strong><br><strong>…</strong></p><p>应用场景:<br>要查询的结果来自于多个表，且多个表没有直接的连接关系，但查询的信息一致时</p><p>特点:<br>1、要求多条查询语句的查询列数是一致的!<br>2、要求多条查询语句的查询的每一列的类型和顺序最好一致<br>3、union关键字默认去重，如果使用union all 可以包含重复项</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#引入的案例:查询部门编号>90或邮箱包含a的员工信息</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> employees <span class="token keyword">where</span> department_id<span class="token operator">></span><span class="token number">90</span><span class="token keyword">union</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> employees <span class="token keyword">where</span> email <span class="token operator">like</span> <span class="token string">'%a%'</span><span class="token punctuation">;</span></code></pre><h2 id="DML语言"><a href="#DML语言" class="headerlink" title="DML语言"></a>DML语言</h2><p>数据操作语言:<br>插入: insert<br>修改: update<br>删除: delete</p><h3 id="一、插入语句"><a href="#一、插入语句" class="headerlink" title="一、插入语句"></a>一、插入语句</h3><p><strong>方式一: 经典的插入</strong></p><p><strong>语法: insert into 表名(列名….) values (值1….);</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#1.插入的值的类型要与列的类型一致或兼容</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> beauty<span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> beauty<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>sex<span class="token punctuation">,</span>borndate<span class="token punctuation">,</span>phone<span class="token punctuation">,</span>photo<span class="token punctuation">,</span>boyfriend_id<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token string">'唐艺昕'</span><span class="token punctuation">,</span><span class="token string">'女'</span><span class="token punctuation">,</span><span class="token string">'1990-4-23'</span><span class="token punctuation">,</span><span class="token string">'18989999999'</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#2.不可以为null的列必须插入值。可以为nul1的列如何插入值?</span><span class="token comment" spellcheck="true">#方式一:</span><span class="token keyword">insert</span> <span class="token keyword">into</span> beauty<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>sex<span class="token punctuation">,</span>borndate<span class="token punctuation">,</span>phone<span class="token punctuation">,</span>photo<span class="token punctuation">,</span>boyfriend_id<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token string">'唐艺昕'</span><span class="token punctuation">,</span><span class="token string">'女'</span><span class="token punctuation">,</span><span class="token string">'1990-4-23'</span><span class="token punctuation">,</span><span class="token string">'18989999999'</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#方式二:</span><span class="token keyword">insert</span> <span class="token keyword">into</span> beauty<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>sex<span class="token punctuation">,</span>phone<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token string">'杨幂'</span><span class="token punctuation">,</span><span class="token string">'女'</span><span class="token punctuation">,</span><span class="token string">'18989999999'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#3.列的顺序可以调换</span><span class="token keyword">insert</span> <span class="token keyword">into</span> beauty<span class="token punctuation">(</span>name<span class="token punctuation">,</span>id<span class="token punctuation">,</span>phone<span class="token punctuation">,</span>sex<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'关晓彤'</span><span class="token punctuation">,</span><span class="token string">'15'</span><span class="token punctuation">,</span><span class="token string">'1546879565'</span><span class="token punctuation">,</span><span class="token string">'女'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#4.列数和值的个数必须一致</span><span class="token keyword">insert</span> <span class="token keyword">into</span> beauty<span class="token punctuation">(</span>name<span class="token punctuation">,</span>id<span class="token punctuation">,</span>phone<span class="token punctuation">,</span>sex<span class="token punctuation">)</span><span class="token keyword">values</span><span class="token punctuation">(</span><span class="token string">'蒋欣'</span><span class="token punctuation">,</span><span class="token string">'16'</span><span class="token punctuation">,</span><span class="token string">'1546879565'</span><span class="token punctuation">,</span><span class="token string">'女'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#5.可以省略列名，默认所有列，而且列的顺序和表中列的顺序一致</span><span class="token keyword">insert</span> <span class="token keyword">into</span> beauty <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token string">'唐艺昕'</span><span class="token punctuation">,</span><span class="token string">'女'</span><span class="token punctuation">,</span><span class="token string">'1990-4-23'</span><span class="token punctuation">,</span><span class="token string">'18989999999'</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><strong>方式二</strong></p><p><strong>语法: insert into 表名 set 列名=值,列名=值,…</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">insert</span> <span class="token keyword">into</span> beauty <span class="token keyword">set</span> id<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">,</span>name<span class="token operator">=</span><span class="token string">'刘涛'</span><span class="token punctuation">,</span>phone<span class="token operator">=</span><span class="token string">'16546489789'</span><span class="token punctuation">;</span></code></pre><p>区别：</p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#1、方式一支持插入多行,方式二不支持</span><span class="token keyword">insert</span> <span class="token keyword">into</span> beauty <span class="token keyword">values</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">'唐艺昕'</span><span class="token punctuation">,</span><span class="token string">'女'</span><span class="token punctuation">,</span><span class="token string">'1990-4-23'</span><span class="token punctuation">,</span><span class="token string">'18989999999'</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token string">'唐艺昕'</span><span class="token punctuation">,</span><span class="token string">'女'</span><span class="token punctuation">,</span><span class="token string">'1990-4-23'</span><span class="token punctuation">,</span><span class="token string">'18989999999'</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token string">'唐艺昕'</span><span class="token punctuation">,</span><span class="token string">'女'</span><span class="token punctuation">,</span><span class="token string">'1990-4-23'</span><span class="token punctuation">,</span><span class="token string">'18989999999'</span><span class="token punctuation">,</span><span class="token boolean">null</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#2、方式一支持子查询，方式1二不支持</span><span class="token keyword">insert</span> <span class="token keyword">into</span> beauty<span class="token punctuation">(</span>id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>phone<span class="token punctuation">)</span><span class="token keyword">select</span> <span class="token number">23</span><span class="token punctuation">,</span><span class="token string">'宋茜'</span><span class="token punctuation">,</span><span class="token string">'5464698798'</span><span class="token punctuation">;</span></code></pre><h3 id="二、修改语句"><a href="#二、修改语句" class="headerlink" title="二、修改语句"></a>二、修改语句</h3><p><strong>1.修改单表的记录</strong><br><strong>update 表</strong><br><strong>set 列=新值，列=新值…</strong><br><strong>where 筛选条件;</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#1.修改单表的记录</span><span class="token comment" spellcheck="true">#案例1:修改beauty表中姓唐的女神的电话为13899888899</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> beauty<span class="token punctuation">;</span><span class="token keyword">update</span> beauty <span class="token keyword">set</span> phone<span class="token operator">=</span><span class="token string">'110'</span> <span class="token keyword">where</span> name <span class="token operator">like</span> <span class="token string">'唐%'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例2:修改boys表中id好为2的名称为张飞，魅力值10</span><span class="token keyword">update</span> boys <span class="token keyword">set</span> userCP<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>boyName<span class="token operator">=</span><span class="token string">'张飞'</span> <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span></code></pre><p><strong>2.修改多表的记录</strong><br><strong>sq192 语法:</strong><br>    <strong>update  表1 别名，表2 别名</strong><br>    <strong>set 列=新值，列=新值， …</strong><br>    <strong>where  连接条件</strong><br>    <strong>and  筛选条件;</strong><br><strong>sq199语法:</strong><br>    <strong>update 表1  别名</strong><br>    <strong>inner | left | right  join  表2  别名</strong><br>    <strong>on 连接条件</strong><br>    <strong>set 列=新值，列=新值，…</strong><br>    <strong>where 筛选条件;</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#2.修改多表的记录</span><span class="token comment" spellcheck="true">#案例1:修改张无忌的女朋友的手机号为114 </span><span class="token keyword">update</span> beauty <span class="token number">b</span><span class="token keyword">inner</span> <span class="token keyword">join</span> boys bo<span class="token keyword">on</span> <span class="token number">b</span><span class="token punctuation">.</span>boyfriend_id<span class="token operator">=</span>bo<span class="token punctuation">.</span>id<span class="token keyword">set</span> <span class="token number">b</span><span class="token punctuation">.</span>phone<span class="token operator">=</span><span class="token string">'114'</span><span class="token keyword">where</span> bo<span class="token punctuation">.</span>boyName<span class="token operator">=</span><span class="token string">'张无忌'</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例2:修改没有男朋友的女神的男朋友编号都为2号</span><span class="token keyword">update</span> beauty <span class="token number">b</span><span class="token keyword">left</span> <span class="token keyword">join</span> boys bo<span class="token keyword">on</span> <span class="token number">b</span><span class="token punctuation">.</span>boyfriend_id<span class="token operator">=</span>bo<span class="token punctuation">.</span>id<span class="token keyword">set</span> <span class="token number">b</span><span class="token punctuation">.</span>boyfriend_id<span class="token operator">=</span><span class="token number">2</span><span class="token keyword">where</span> bo<span class="token punctuation">.</span>id <span class="token operator">is</span> <span class="token boolean">null</span><span class="token punctuation">;</span></code></pre><h3 id="三、删除语句"><a href="#三、删除语句" class="headerlink" title="三、删除语句"></a>三、删除语句</h3><p><strong>方式一: delete</strong><br><strong>语法:</strong><br><strong>1、单表的删除[★]</strong><br><strong>delete from 表名 where 筛选条件</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#1.单表的删除#案例:删除手机号以9结尾的女神信息</span><span class="token keyword">delete</span> <span class="token keyword">from</span> beauty <span class="token keyword">where</span> phone <span class="token operator">like</span> <span class="token string">'%9'</span><span class="token punctuation">;</span></code></pre><p><strong>2、多表的删除[补充]</strong><br><strong>sq192语法:</strong><br><strong>delete 表1的别名，表2的别名</strong><br><strong>from 表1  别名，表2  别名</strong><br><strong>where  连接条件</strong><br><strong>and  筛选条件;</strong></p><p><strong>sq199语法:</strong><br><strong>delete 表1的别名，表2的别名</strong><br><strong>from 表1 别名</strong><br><strong>inner | left | right  join 表2  别名  on  连接条件</strong><br><strong>where 筛选条件;</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#2.多表的删除</span><span class="token comment" spellcheck="true">#案例:删除张无忌的女朋友的信息</span><span class="token keyword">delete</span> <span class="token number">b</span><span class="token keyword">from</span> beauty <span class="token number">b</span><span class="token keyword">inner</span> <span class="token keyword">join</span> boys bo <span class="token keyword">on</span> <span class="token number">b</span><span class="token punctuation">.</span>boyfriend_id<span class="token operator">=</span>bo<span class="token punctuation">.</span>id<span class="token keyword">where</span> bo<span class="token punctuation">.</span>boyName<span class="token operator">=</span><span class="token string">'张无忌'</span><span class="token comment" spellcheck="true">#案例:删除黄晓明的信息以及他女朋友的信息</span><span class="token keyword">delete</span> <span class="token number">b</span><span class="token punctuation">,</span>bo<span class="token keyword">from</span> beauty <span class="token number">b</span><span class="token keyword">inner</span> <span class="token keyword">join</span> boys bo <span class="token keyword">on</span> <span class="token number">b</span><span class="token punctuation">.</span>boyfriend_id<span class="token operator">=</span>bo<span class="token punctuation">.</span>id<span class="token keyword">where</span> bo<span class="token punctuation">.</span>boyName<span class="token operator">=</span><span class="token string">'黄晓明'</span></code></pre><p><strong>方式二: truncate</strong></p><p><strong>语法: truncate table 表名；</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#方式二: truncate语句 </span><span class="token comment" spellcheck="true">#案例:将魅力值>100的男神信息删除</span><span class="token keyword">truncate</span> <span class="token keyword">from</span> boys<span class="token punctuation">;</span></code></pre><p><strong>delete和truncate区别：</strong></p><p>1.delete可以加where条件，truncate不 能加<br>2.truncate删除，效率高一丢丢<br>3.假如要删除的表中有自增长列,如果用delete删除后，再插入数据，自增长列的值从断点开始，而truncate删除后，再插入数据，自增长列的值从1开始。<br>4.truncate删除没有返回值，delete删 除有返回值<br>5.truncate删除不能回滚，delete删除 可以回滚</p><h2 id="DDL语言"><a href="#DDL语言" class="headerlink" title="DDL语言"></a>DDL语言</h2><p>数据定义语言<br>库和表的管理</p><p>一、库的管理<br>创建、修改、删除</p><p>二、表的管理<br>创建、修改、删除</p><pre><code>创建:create修改:alter删除:drop</code></pre><h3 id="一-库的管理"><a href="#一-库的管理" class="headerlink" title="一.库的管理"></a>一.库的管理</h3><h4 id="1、库的创建"><a href="#1、库的创建" class="headerlink" title="1、库的创建"></a>1、库的创建</h4><p><strong>语法: create database [if not exists] 库名;存在就不创建，不存在在创建</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">create</span> <span class="token keyword">database</span> <span class="token keyword">if</span> <span class="token operator">not</span> <span class="token keyword">exists</span> aaabook<span class="token punctuation">;</span></code></pre><h4 id="2、库的修改"><a href="#2、库的修改" class="headerlink" title="2、库的修改"></a>2、库的修改</h4><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#更改库的字符集</span><span class="token keyword">alter</span> <span class="token keyword">database</span> aaabook <span class="token keyword">character set</span> gbk<span class="token punctuation">;</span></code></pre><h4 id="3、库的删除"><a href="#3、库的删除" class="headerlink" title="3、库的删除"></a>3、库的删除</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">drop</span> <span class="token keyword">database</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> aaabook<span class="token punctuation">;</span></code></pre><h3 id="二-表的管理"><a href="#二-表的管理" class="headerlink" title="二.表的管理"></a>二.表的管理</h3><h4 id="1-表的创建"><a href="#1-表的创建" class="headerlink" title="1.表的创建"></a>1.表的创建</h4><p><strong>语法</strong><br><strong>create table 表名(</strong><br>            <strong>列名  列的类型 【(长度) 约束】,</strong><br>            <strong>列名  列的类型 【(长度) 约束】,</strong><br>            <strong>列名  列的类型 【(长度) 约束】,</strong><br>            <strong>…</strong><br>            <strong>列名  列的类型 【(长度) 约束】</strong><br><strong>);</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#案例:创建表book</span><span class="token keyword">use</span> aaabook<span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token keyword">table</span> book<span class="token punctuation">(</span>    id  <span class="token keyword">int</span> <span class="token punctuation">,</span><span class="token comment" spellcheck="true">#编号</span>    bName  <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">#图书名</span>    price <span class="token keyword">double</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">#价格</span>    authorid <span class="token keyword">int</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">#作者编号</span>    publishDate <span class="token keyword">date</span> <span class="token comment" spellcheck="true">#出版日期</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#案例:创建表author</span><span class="token keyword">create</span> <span class="token keyword">table</span> author<span class="token punctuation">(</span>    id <span class="token keyword">int</span> <span class="token punctuation">,</span>    au_Name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    nation  <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>desc book;<br>desc author;</p><h4 id="2-表的修改"><a href="#2-表的修改" class="headerlink" title="2.表的修改"></a>2.表的修改</h4><p><strong>alter table 表名 add | drop | modify | change column 列名[ 例类型 约束] ;</strong></p><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">#①修改列名</span><span class="token comment" spellcheck="true">#修改表book中publisDate列为 列名:pubDate,类型:DATETIME</span><span class="token keyword">alter</span> <span class="token keyword">table</span> book change <span class="token keyword">column</span> publishDate pubDate <span class="token keyword">DATETIME</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#②修改列的类型或约束</span><span class="token comment" spellcheck="true">#修改表book中列pubDate的类型为:time</span><span class="token keyword">alter</span> <span class="token keyword">table</span> book <span class="token keyword">modify</span> <span class="token keyword">column</span> pubDate time<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#③添加新列</span><span class="token comment" spellcheck="true">#在表author中添加新列 列名:phone 类型:varchar(20)</span><span class="token keyword">alter</span> <span class="token keyword">table</span> author <span class="token keyword">add</span> <span class="token keyword">column</span> phone <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#④删除列</span><span class="token comment" spellcheck="true">#删除表author中列:phone</span><span class="token keyword">alter</span> <span class="token keyword">table</span> author <span class="token keyword">drop</span> <span class="token keyword">column</span> phone<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#⑤修改表名</span><span class="token keyword">alter</span> <span class="token keyword">table</span> author <span class="token keyword">rename</span> <span class="token keyword">to</span> book_auther<span class="token punctuation">;</span></code></pre><h4 id="3-表的删除"><a href="#3-表的删除" class="headerlink" title="3.表的删除"></a>3.表的删除</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> book_author<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#通用的写法:</span><span class="token keyword">drop</span> <span class="token keyword">database</span> <span class="token keyword">IF</span> <span class="token keyword">exists</span> 旧库名<span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token keyword">database</span> 新库名<span class="token punctuation">;</span><span class="token keyword">drop</span> <span class="token keyword">table</span> <span class="token keyword">if</span> <span class="token keyword">exists</span> 旧表名<span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token keyword">table</span> 表名<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span></code></pre><h4 id="4-表的复制"><a href="#4-表的复制" class="headerlink" title="4.表的复制"></a>4.表的复制</h4><pre class=" language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> author<span class="token punctuation">;</span><span class="token keyword">insert</span> <span class="token keyword">into</span> author <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">'村上春树'</span><span class="token punctuation">,</span><span class="token string">'日本'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">'莫言'</span><span class="token punctuation">,</span><span class="token string">'中国'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">'冯唐'</span><span class="token punctuation">,</span><span class="token string">'中国'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">'金庸'</span><span class="token punctuation">,</span><span class="token string">'中国'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">#1.仅仅复制表的结构</span><span class="token keyword">create</span> <span class="token keyword">table</span> copy <span class="token operator">like</span> author<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> copy<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#2.复制表的结构+数据</span><span class="token keyword">create</span> <span class="token keyword">table</span> copy1 <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> author<span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> copy1<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#只复制部分数据</span><span class="token keyword">create</span> <span class="token keyword">table</span> copy2<span class="token keyword">select</span> id<span class="token punctuation">,</span>au_name <span class="token keyword">from</span> author<span class="token keyword">where</span> nation<span class="token operator">=</span><span class="token string">'中国'</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> copy2<span class="token punctuation">;</span><span class="token comment" spellcheck="true">#仅仅复制某些字段</span><span class="token keyword">create</span> <span class="token keyword">table</span> copy3<span class="token keyword">select</span> id<span class="token punctuation">,</span>au_name <span class="token keyword">from</span> author<span class="token keyword">where</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> copy3<span class="token punctuation">;</span></code></pre><h3 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h3><p>含义：一种限制，用于限制表中的数据，为了保证表中的数据的准确和可靠性</p><p><strong>分类:    六大约束</strong><br>    <strong>NOT NULL: 非空，用于保证该字段的值不能为空,比如姓名、学号等</strong><br>    <strong>DEFAULT:默认，用于保证该字段有默认值,比如性别</strong><br>    <strong>PRIMARY KEY:主键，用于保证该字段的值具有唯一性，并且非空 比如学号、员工编号等</strong><br>    <strong>UNIQUE:唯一，用于保证该字段的值具有唯一性，可以为空 比如座位号</strong><br>    <strong>CHECK:检查约束[mysql中不支持] 比如年龄、性别</strong><br>    <strong>FOREIGN KEY:外键，用于限制两个表的关系，用于保证该字段的值必须来自于主表的关联列的值</strong></p><table><thead><tr><th align="center">主键和唯一的区别：</th><th align="center">保证唯一性</th><th align="center">是否允许为空</th><th align="center">一个表中可以有多个</th><th align="center">是否允许组合</th></tr></thead><tbody><tr><td align="center"><strong>主键：</strong></td><td align="center">√</td><td align="center">×</td><td align="center">×</td><td align="center">√</td></tr><tr><td align="center"><strong>唯一：</strong></td><td align="center">√</td><td align="center">√</td><td align="center">√</td><td align="center">√</td></tr></tbody></table><p>添加约束的时机:<br>    1.创建表时<br>    2.修改表时</p><p>约束的添加分类:</p><p>​    列级约束:<br>​        六大约束语法_上都支持，但外键约束没有效果</p><p>​    表级约束:<br>​        除了非空、默认，其他的都支持</p><pre class=" language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> 表名<span class="token punctuation">(</span>    字段名 字段类型 列级约束<span class="token punctuation">,</span>    字段名 字段类型<span class="token punctuation">,</span>    表级约束<span class="token punctuation">)</span></code></pre><h4 id="一、创建表时添加约束"><a href="#一、创建表时添加约束" class="headerlink" title="一、创建表时添加约束"></a>一、创建表时添加约束</h4><h5 id="1-添加列级约束"><a href="#1-添加列级约束" class="headerlink" title="1.添加列级约束"></a>1.添加列级约束</h5><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 语法:</span><span class="token comment" spellcheck="true">-- 直接在字段名和类型后面追加约束类型即可。</span><span class="token comment" spellcheck="true">-- 只支持:默认、非空、主键、唯一</span><span class="token keyword">create</span> <span class="token keyword">table</span> stuinfo <span class="token punctuation">(</span>    id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">#主键</span>    stuName <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">not</span> <span class="token boolean">null</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#非空</span>    gender char<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">check</span> <span class="token punctuation">(</span>gender<span class="token operator">=</span><span class="token string">'男'</span> <span class="token operator">or</span> gender<span class="token operator">=</span><span class="token string">'女'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#检查</span>    seat <span class="token keyword">int</span> <span class="token keyword">unique</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#唯一</span>    age <span class="token keyword">int</span> <span class="token keyword">default</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">#默认约束</span>    majorid <span class="token keyword">int</span> <span class="token keyword">references</span> major<span class="token punctuation">(</span>id<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#外键</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">create</span> <span class="token keyword">table</span> major<span class="token punctuation">(</span>    id <span class="token keyword">int</span> <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">,</span>    majorName <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><h5 id="2-添加表级约束"><a href="#2-添加表级约束" class="headerlink" title="2.添加表级约束"></a>2.添加表级约束</h5><pre class=" language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">-- 语法:在各个字段的最下面</span><span class="token comment" spellcheck="true">-- 【constraint  约束名】 约束类型(字段名)</span><span class="token keyword">create</span> <span class="token keyword">table</span> stuinfo<span class="token punctuation">(</span>    id <span class="token keyword">int</span><span class="token punctuation">,</span>    stuname <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    gender char<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    seat <span class="token keyword">int</span><span class="token punctuation">,</span>    age <span class="token keyword">int</span><span class="token punctuation">,</span>    majorid <span class="token keyword">INT</span><span class="token punctuation">,</span>    <span class="token keyword">constraint</span> pk <span class="token keyword">primary</span> <span class="token keyword">key</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">#主键</span>    <span class="token keyword">constraint</span> uq <span class="token keyword">unique</span><span class="token punctuation">(</span>seat<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">#唯一键</span>    <span class="token keyword">constraint</span> ck <span class="token keyword">check</span><span class="token punctuation">(</span>gender<span class="token operator">=</span><span class="token string">'男'</span> <span class="token operator">or</span> gender<span class="token operator">=</span><span class="token string">'女'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token comment" spellcheck="true">#检查</span>    <span class="token keyword">constraint</span> fk_stuinfo_major <span class="token keyword">foreign</span> <span class="token keyword">key</span><span class="token punctuation">(</span>majorid<span class="token punctuation">)</span> <span class="token keyword">references</span> major<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token comment" spellcheck="true">#外键</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
